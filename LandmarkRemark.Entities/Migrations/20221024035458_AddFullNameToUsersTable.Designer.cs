// <auto-generated />
using System;
using LandmarkRemark.Entities;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using NetTopologySuite.Geometries;

#nullable disable

namespace LandmarkRemark.Entities.Migrations
{
    [DbContext(typeof(LandmarkRemarkContext))]
    [Migration("20221024035458_AddFullNameToUsersTable")]
    partial class AddFullNameToUsersTable
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("LandmarkRemark.Entities.Landmark", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<bool>("Deleted")
                        .HasColumnType("bit");

                    b.Property<Point>("Location")
                        .IsRequired()
                        .HasColumnType("geography");

                    b.Property<string>("Notes")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Updated")
                        .HasColumnType("datetime2");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Landmarks");
                });

            modelBuilder.Entity("LandmarkRemark.Entities.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<bool>("Deleted")
                        .HasColumnType("bit");

                    b.Property<string>("EmailAddress")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("nvarchar(max)")
                        .HasComputedColumnSql("[FirstName] + ' ' + [LastName]", true);

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Updated")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Created = new DateTime(2022, 10, 18, 12, 45, 0, 0, DateTimeKind.Unspecified),
                            Deleted = false,
                            EmailAddress = "anthony.albanese@example.com",
                            FirstName = "Anthony",
                            LastName = "Albanese",
                            Password = "anthonyalbanese",
                            Updated = new DateTime(2022, 10, 18, 12, 45, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 2,
                            Created = new DateTime(2022, 10, 18, 12, 45, 0, 0, DateTimeKind.Unspecified),
                            Deleted = false,
                            EmailAddress = "richard.marles@example.com",
                            FirstName = "Richard",
                            LastName = "Marles",
                            Password = "richardmarles",
                            Updated = new DateTime(2022, 10, 18, 12, 45, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 3,
                            Created = new DateTime(2022, 10, 18, 12, 45, 0, 0, DateTimeKind.Unspecified),
                            Deleted = false,
                            EmailAddress = "jim.chalmers@example.com",
                            FirstName = "Jim",
                            LastName = "Chalmers",
                            Password = "jimchalmers",
                            Updated = new DateTime(2022, 10, 18, 12, 45, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 4,
                            Created = new DateTime(2022, 10, 18, 12, 45, 0, 0, DateTimeKind.Unspecified),
                            Deleted = false,
                            EmailAddress = "penny.wong@example.com",
                            FirstName = "Penny",
                            LastName = "Wong",
                            Password = "pennywong",
                            Updated = new DateTime(2022, 10, 18, 12, 45, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 5,
                            Created = new DateTime(2022, 10, 18, 12, 45, 0, 0, DateTimeKind.Unspecified),
                            Deleted = false,
                            EmailAddress = "mark.butler@example.com",
                            FirstName = "Mark",
                            LastName = "Butler",
                            Password = "markbulter",
                            Updated = new DateTime(2022, 10, 18, 12, 45, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("LandmarkRemark.Entities.Landmark", b =>
                {
                    b.HasOne("LandmarkRemark.Entities.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });
#pragma warning restore 612, 618
        }
    }
}
